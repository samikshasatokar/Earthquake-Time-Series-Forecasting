# -*- coding: utf-8 -*-
"""Magnitude_Prophet.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18JeXuVXVQHDJWBf4KuwQQd502JZ3aBhP
"""

#!pip install prophet

import magnitude_data_cleaning
from magnitude_data_cleaning import *
from prophet import Prophet
from sklearn.metrics import mean_squared_error
import streamlit as st
from fbprophet.plot import plot_plotly



df_mag = df_mag.reset_index()

df_mag.head()

df_mag = df_mag.rename(columns={'time':'ds', 'mag':'y'})

import datetime
df_mag['ds'] = [datetime.datetime.date(d) for d in df_mag['ds']]

df_mag.head()



def mag_prophet():
    m = Prophet()
    m.fit(df_mag)

    future = m.make_future_dataframe(periods=100)
    forecast = m.predict(future)

    forecast

    figure = plot_plotly(m, forecast)
    st.plotly_chart(figure)

    st.markdown('''
                      
                      The graph shown above clearly shows the plots of actual ( data points in black color ) 
                      and predicted ( data line highlighted in blue color). 
        ''')
    metric_df = forecast.set_index('ds')[['yhat']].join(df_mag.set_index('ds').y).reset_index()
    metric_df.dropna(inplace=True)
    mse = round(mean_squared_error(metric_df.y, metric_df.yhat), 2)
    st.write("Mean Squared Error = ", mse)
    st.subheader("Conclusion")
    st.write("The error rate of the model is lesser which shows that the results closer to the observed values.")
    st.markdown(''' 
           
            Thus, the evaluations clearly represents how Prophet captures the trends in the dataset and 
            forecasts the given future set in few lines of code.
    ''')












